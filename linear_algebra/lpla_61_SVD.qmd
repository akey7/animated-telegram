---
title: "LPLA 61: Singular Value Decomposition"
date: "03/21/2024"
format:
  html:
    code-fold: false
jupyter: julia-1.10
---

## Singular value decomposition in Julia

```{julia}
#| label: load-modules
#| eval: true
#| include: false

using LinearAlgebra
using CSV
using DataFrames
using Statistics
```

### Diamonds Measurement Covariance Matrix

Use the famous [diamonds dataset](https://www.kaggle.com/datasets/shivam2503/diamonds) to create a covariance matrix for the x, y, z dimensions.

#### Load the data

Load the data and look at the first 5 rows.

```{julia}
#| label: load-data
#| eval: true
#| include: true

df = CSV.read(joinpath("D:\\", "Projects", "animated-telegram-jl", "input", "diamonds.csv"), DataFrame)
println(first(df, 5))
```

#### Extract, scale, and center measurement columns

First, extract the raw measurement values.

```{julia}
#| label: preview-measurements
#| eval: true
#| include: true

xs = df[:, :x]
ys = df[:, :y]
zs = df[:, :z]

println(xs[1:5])
println(ys[1:5])
println(zs[1:5])
```

Now subtract the mean and standard deviations for each column.

```{julia}
#| label: scale-and-center-measurements
#| eval: true
#| include: true

centered_xs = (xs .- mean(xs)) .- std(xs)
centered_ys = (ys .- mean(ys)) .- std(ys)
centered_zs = (zs .- mean(zs)) .- std(zs)

println(centered_xs[1:5])
println(centered_ys[1:5])
println(centered_zs[1:5])
```

Create the covariance matrix:

```{julia}
#| label: covariance-matrix
#| eval: true
#| include: true

cov_matrix = ones(3, 3)

cov_xy = cov(centered_xs, centered_ys)
cov_xz = cov(centered_xs, centered_zs)
cov_yz = cov(centered_ys, centered_zs)

cov_matrix[1, 2] = cov_xy
cov_matrix[1, 3] = cov_xz
cov_matrix[2, 3] = cov_yz

cov_matrix[2, 1] = cov_xy
cov_matrix[3, 1] = cov_xz
cov_matrix[3, 2] = cov_yz

cov_matrix
```
